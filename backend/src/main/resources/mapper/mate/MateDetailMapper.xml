<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.pjt.planit.business.mate.mapper.MateDetailMapper">

	<select id="getDetail"
		parameterType="com.pjt.planit.business.mate.dto.MateDetailDTO"
		resultType="com.pjt.planit.business.mate.dto.MateDetailDTO">
		SELECT
		fm.find_mate_no AS findMateNo,
		c.cust_no AS CustNo,
		c.name AS custName,
		fm.create_by AS findMateCreateBy,
		fm.trip_plan_no AS tripPlanNo,
		fm.title AS title,
		fm.start_dt AS startDate,
		fm.end_dt AS endDate,
		fm.update_dt AS updateDate,
		fm.create_dt AS findMateCreateDate,
		fm.recruits AS mateNum,
		fm.content AS content,
		fm.gender_type AS gender,
		fm.twenty_yn AS twentyYN,
		fm.thirty_yn AS thirtyYN,
		fm.forty_yn AS fortyYN,
		fm.fifty_yn AS fiftyYN,
		tp.thumbnail_img AS thumbnail_img,
		fa.find_mate_apply_no AS findMateAppNo,
		fa.allow_yn AS appAllowYn,
		fa.expired_dt AS expiredDt,
		fl.find_mate_like_no AS findMateLikeNo,

		CASE
		WHEN fl.cust_no = #{custNo} THEN 'Y'
		ELSE 'N'
		END AS hasCustLiked
		FROM
		T_FIND_MATE fm
		LEFT JOIN
		T_TRIP_PLAN tp ON fm.trip_plan_no = tp.trip_plan_no
		LEFT JOIN
		T_CUST c ON tp.cust_no = c.cust_no
		LEFT JOIN
		T_FIND_MATE_APPLY fa ON fm.find_mate_no = fa.find_mate_no
		LEFT JOIN
		T_FIND_MATE_LIKE fl ON fm.find_mate_no = fl.find_mate_no
		LEFT JOIN
		T_FIND_MATE_REGION r ON fm.find_mate_no = r.find_mate_no
		LEFT JOIN
		T_FIND_MATE_STYLE s ON fm.find_mate_no = s.find_mate_no
		WHERE
		fm.find_mate_no = #{findMateNo}
		GROUP BY
		fm.find_mate_no;
	</select>


	<select id="getTripPlan"
		parameterType="com.pjt.planit.business.tripplan.dto.TripPlanDto"
		resultType="hashmap">

		SELECT *

		FROM T_TRIP_PLAN

		WHERE trip_plan_no = #{tripPlanNo};

	</select>


	<select id="getMateReply" parameterType="Integer"
		resultType="com.pjt.planit.business.mate.dto.MateReplyDTO">

		SELECT
		fr.find_mate_reply_no AS findMateReplyNo,
		fr.find_mate_no AS findMateNo,
		fr.upper_find_mate_reply_no AS upperFindMateReplyNo,
		fr.cust_no AS custNo,
		fr.reply AS reply,
		fr.public_yn AS publicYn,
		fr.create_dt AS createDt,
		fr.seq AS seq,

		-- Fetching the customer name using the custNo
		c.name AS custName
		FROM
		T_FIND_MATE_REPLY fr
		LEFT JOIN
		T_CUST c ON fr.cust_no = c.cust_no
		WHERE
		fr.find_mate_no = #{findMateNo}
		ORDER BY
		fr.create_dt ASC;

	</select>

	<update id="editDetail"
		parameterType="com.pjt.planit.business.mate.dto.MateDetailDTO">
		UPDATE T_FIND_MATE
		SET
		find_mate_no = #{findMateNo},
		create_by = #{findMateCreateBy},
		trip_plan_no = #{tripPlanNo},
		title =
		#{title},
		update_dt =
		#{updateDate},
		start_dt = #{startDate},
		end_dt =
		#{endDate},
		thumbnail_img = #{thumbnail_img},
		recruits = #{mateNum},
		content = #{content},
		gender_type = #{gender},
		twenty_yn = #{twentyYN},
		thirty_yn = #{thirtyYN},
		forty_yn = #{fortyYN},
		fifty_yn = #{fiftyYN}
		WHERE find_mate_no = #{findMateNo}
	</update>



</mapper>